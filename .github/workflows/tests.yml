name: Testing

on: [push]

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      poetry_version: "1.3.2"
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: {{ matrix.python_version }}
      - name: Cached Poetry Install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.3.2-0
      - uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Cached install dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction --no-root --all-extras
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction
      - run: poetry run pytest
  windows:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --extras "test ml medical dev" --with dev --no-interaction

      - name: Run tests
        run: |
          poetry run pytest
