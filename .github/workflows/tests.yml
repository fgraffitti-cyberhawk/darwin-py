# CI/CD Flow

name: Testing

on:
  pull-request:
    branches:
      - master

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        poetry-version: ["1.13.0", "1.32.0"]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      name: Setup Python ${{ matrix.python-version }} on ${{ matrix.os }} using Poetry ${{ matrix.poetry-version }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies'
        run: poetry install --no-root --no-interaction --extras "ml medical test dev" --with dev
      - name: Run tests
        run: poetry run pytest
      
  

# name: Testing

# on: [push]

# jobs:
#   ubuntu:
#     runs-on: ubuntu-latest
#     timeout-minutes: 30
#     strategy:
#       matrix:
#         python-version: [3.7, 3.8, 3.9, "3.10"]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python_version }}
#       - name: Cache Poetry Install
#         uses: actions/cache@v2
#         with:
#           path: ~/.local
#           key: poetry-1.3.2-0
#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           version: 1.3.2
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#       - name: Install dependencies
#         id: cache-deps
#         uses: actions/cache@v2
#         with:
#           path: .venv
#           key: pydeps-${{ hashFiles('**/poetry.lock') }}
#       - run: poetry install --no-interaction --no-root --extras "ml medical test dev" --with dev
#         if: steps.cache-deps.outputs.cache-hit != 'true'
#       - run: poetry install --no-interaction --extras "ml medical test dev" --with dev
#       - name: Run Tests
#         run: poetry run pytest
#   windows:
#     runs-on: windows-latest
#     timeout-minutes: 30
#     strategy:
#       matrix:
#         python-version: [3.7, 3.8, 3.9, "3.10"]

#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install poetry
#           poetry install --extras "test ml medical dev" --with dev --no-interaction

#       - name: Run tests
#         run: |
#           poetry run pytest
